{"version":3,"file":"static/js/786.752a6f2a.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/SearchMoviesForm/SearchMoviesForm.styled.js","components/SearchMoviesForm/SearchMoviesForm.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Item, List, MovieImg, MovieText } from './MovieList.styled';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport defaultImg from 'default-movie.jpg';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImg\n              }\n              alt={original_title}\n            />\n            <MovieText>\n              <BiCameraMovie />\n              {original_title}\n            </MovieText>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const MoviesFormInput = styled.input`\n  padding: 10px;\n  width: 400px;\n  border: none;\n  outline: none;\n  border-radius: 10px;\n`;\n\nexport const MoviesFormBtn = styled.button`\n  padding: 5px;\n  border-radius: 10px;\n  color: #f2d2a9;\n`;\n","import {\n  MoviesForm,\n  MoviesFormBtn,\n  MoviesFormInput,\n} from './SearchMoviesForm.styled';\nimport { CiSearch } from 'react-icons/ci';\n\nconst SearchMoviesForm = ({ handleSubmit }) => {\n  const handleSearch = event => {\n    event.preventDefault();\n\n    handleSubmit(event.target.search.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <MoviesForm onSubmit={handleSearch}>\n        <label htmlFor=\"input-search\"></label>\n        <MoviesFormInput\n          type=\"text\"\n          id=\"input-search\"\n          name=\"search\"\n          autoComplete=\"off\"\n          required\n        />\n\n        <MoviesFormBtn type=\"submit\">\n          <CiSearch size={30} />\n        </MoviesFormBtn>\n      </MoviesForm>\n    </>\n  );\n};\n\nexport default SearchMoviesForm;\n","import { Container, Heading } from 'components/App/App.styled';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchMoviesForm from 'components/SearchMoviesForm/SearchMoviesForm';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'service/api';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n\n  const handleSubmit = value => {\n    setSearchParams({ movie: value });\n  };\n\n  useEffect(() => {\n    const params = searchParams.get('movie') || '';\n    if (!params) return;\n\n    const getMovies = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMoviesBySearch(params);\n        setData(data);\n      } catch (err) {\n        Notiflix.Notify.failure(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchParams]);\n\n  return (\n    <Container>\n      <Heading>Search movies</Heading>\n      {isLoading && <Loader />}\n      <SearchMoviesForm handleSubmit={handleSubmit} />\n      {data.length > 0 && <MovieList movies={data} location={location} />}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","movies","location","_jsx","List","children","map","_ref2","id","original_title","poster_path","Item","_jsxs","Link","to","concat","state","from","MovieImg","src","defaultImg","alt","MovieText","BiCameraMovie","MoviesForm","styled","_templateObject","_taggedTemplateLiteral","MoviesFormInput","_templateObject2","MoviesFormBtn","_templateObject3","handleSubmit","_Fragment","onSubmit","event","preventDefault","target","search","value","currentTarget","reset","htmlFor","type","name","autoComplete","required","CiSearch","size","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","data","setData","_useState3","_useState4","isLoading","setIsLoading","useLocation","useEffect","params","get","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_data","_context","prev","next","getMoviesBySearch","sent","t0","Notiflix","finish","stop","apply","arguments","Container","Heading","Loader","SearchMoviesForm","movie","length","MovieList"],"sourceRoot":""}