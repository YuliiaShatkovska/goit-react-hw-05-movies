{"version":3,"file":"static/js/482.c93bddbc.chunk.js","mappings":"8QA8BA,EAzBkB,SAAHA,GAA8B,IAAxBC,EAAMD,EAANC,OAAQC,EAAQF,EAARE,SAC3B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,SACFJ,EAAOK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAcF,EAAdE,eAAgBC,EAAWH,EAAXG,YAAW,OAC5CP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAAAN,UACHO,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,GAAMQ,MAAO,CAAEC,KAAMf,GAAWG,SAAA,EACnDF,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CACPC,IACET,EAAW,kCAAAK,OAC2BL,GAClCU,EAENC,IAAKZ,KAEPG,EAAAA,EAAAA,MAACU,EAAAA,GAAS,CAAAjB,SAAA,EACRF,EAAAA,EAAAA,KAACoB,EAAAA,IAAa,IACbd,SAZID,EAeJ,KAIf,C,uJCSA,UA9Ba,WACX,IAAAgB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCvB,EAAMyB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAiB9B,OAfAG,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAS,eAAAlC,GAAAmC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,MAAoB,KAAD,EAAhCJ,EAAIC,EAAAI,KACVf,EAAUU,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBM,IAAAA,OAAAA,QAAuBN,EAAAK,IAAM,QAET,OAFSL,EAAAC,KAAA,GAE7BR,GAAa,GAAOO,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBATc,OAAArC,EAAAgD,MAAA,KAAAC,UAAA,KAUff,GACF,GAAG,KAGD/B,EAAAA,EAAAA,KAAA+C,EAAAA,SAAA,CAAA7C,UACEO,EAAAA,EAAAA,MAACuC,EAAAA,GAAS,CAAA9C,SAAA,EACRF,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAAA/C,SAAC,uBACR0B,IAAa5B,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,IACpBpD,EAAOqD,OAAS,IAAKnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACtD,OAAQA,QAIjD,C","sources":["components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Item, List, MovieImg, MovieText } from './MovieList.styled';\nimport { BiCameraMovie } from 'react-icons/bi';\nimport defaultImg from 'default-movie.jpg';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImg\n              }\n              alt={original_title}\n            />\n            <MovieText>\n              <BiCameraMovie />\n              {original_title}\n            </MovieText>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MovieList;\n","import { Container, Heading } from 'components/App/App.styled';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'service/api';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (err) {\n        Notiflix.Notify.failure(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Heading>Trending this week</Heading>\n        {isLoading && <Loader />}\n        {movies.length > 0 && <MovieList movies={movies} />}\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","movies","location","_jsx","List","children","map","_ref2","id","original_title","poster_path","Item","_jsxs","Link","to","concat","state","from","MovieImg","src","defaultImg","alt","MovieText","BiCameraMovie","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrendingMovies","sent","t0","Notiflix","finish","stop","apply","arguments","_Fragment","Container","Heading","Loader","length","MovieList"],"sourceRoot":""}